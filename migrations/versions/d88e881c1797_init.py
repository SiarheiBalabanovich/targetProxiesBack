"""init

Revision ID: d88e881c1797
Revises: 
Create Date: 2025-05-13 15:26:07.716612

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd88e881c1797'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('proxy_buy', 'proxy_prolong', 'proxy_delete', 'doc_create', 'doc_update', name='typenotify').create(op.get_bind())
    sa.Enum('draft', 'published', name='status').create(op.get_bind())
    sa.Enum('public', 'private', name='visibility').create(op.get_bind())
    sa.Enum('paypal', 'card', 'crypto', 'unknown', name='paymentmethod').create(op.get_bind())
    sa.Enum('success', 'pending', 'failed', name='transactionstatus').create(op.get_bind())
    sa.Enum('stripe', 'coinbase', 'crypto_cloud', name='transactionservice').create(op.get_bind())
    sa.Enum('fixed', 'percent', name='discounttype').create(op.get_bind())
    sa.Enum('customer', 'admin', name='userrole').create(op.get_bind())
    op.create_table('discounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('order_amount', sa.Float(), nullable=True),
    sa.Column('type', postgresql.ENUM('fixed', 'percent', name='discounttype', create_type=False), server_default='fixed', nullable=True),
    sa.Column('limit_users', sa.Integer(), nullable=True),
    sa.Column('effective_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('expiry_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_discounts_id'), 'discounts', ['id'], unique=False)
    op.create_table('endpoint',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('api_endpoint', sa.String(), nullable=True),
    sa.Column('successful_call', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_endpoint_id'), 'endpoint', ['id'], unique=False)
    op.create_table('modem',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('ip', sa.String(), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('proxy_port', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_modem_id'), 'modem', ['id'], unique=False)
    op.create_table('param',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_param_id'), 'param', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', postgresql.ENUM('customer', 'admin', name='userrole', create_type=False), server_default='customer', nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('remember', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('endpoint_param',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('param_id', sa.Integer(), nullable=True),
    sa.Column('endpoint_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['endpoint_id'], ['endpoint.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['param_id'], ['param.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_endpoint_param_id'), 'endpoint_param', ['id'], unique=False)
    op.create_table('notifies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', postgresql.ENUM('proxy_buy', 'proxy_prolong', 'proxy_delete', 'doc_create', 'doc_update', name='typenotify', create_type=False), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifies_id'), 'notifies', ['id'], unique=False)
    op.create_table('pages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('user_created_id', sa.Integer(), nullable=True),
    sa.Column('user_updated_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('date_updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('visibility', postgresql.ENUM('public', 'private', name='visibility', create_type=False), nullable=True),
    sa.Column('status', postgresql.ENUM('draft', 'published', name='status', create_type=False), nullable=True),
    sa.ForeignKeyConstraint(['user_created_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_updated_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pages_id'), 'pages', ['id'], unique=False)
    op.create_table('proxy',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('modem_id', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('http_key', sa.String(), nullable=True),
    sa.Column('http_ip', sa.String(), nullable=True),
    sa.Column('http_port', sa.Integer(), nullable=True),
    sa.Column('http_login', sa.String(), nullable=True),
    sa.Column('http_password', sa.String(), nullable=True),
    sa.Column('socks5_key', sa.String(), nullable=True),
    sa.Column('socks5_ip', sa.String(), nullable=True),
    sa.Column('socks5_port', sa.Integer(), nullable=True),
    sa.Column('socks5_login', sa.String(), nullable=True),
    sa.Column('socks5_password', sa.String(), nullable=True),
    sa.Column('auto_rotation', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['modem_id'], ['modem.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('http_key'),
    sa.UniqueConstraint('socks5_key')
    )
    op.create_index(op.f('ix_proxy_id'), 'proxy', ['id'], unique=False)
    op.create_table('stripe_account',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('stripe', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_stripe_account_id'), 'stripe_account', ['id'], unique=False)
    op.create_table('users_crypto_balance',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_crypto_balance_id'), 'users_crypto_balance', ['id'], unique=False)
    op.create_table('users_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('survey', sa.String(), nullable=True),
    sa.Column('survey_detail', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_users_info_id'), 'users_info', ['id'], unique=False)
    op.create_table('subscription',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('period_str', sa.String(), nullable=True),
    sa.Column('trial_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('stripe_account_id', sa.Integer(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('discount_id', sa.Integer(), nullable=True),
    sa.Column('payment_per_period', sa.Float(), nullable=True),
    sa.Column('auto_extend', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['discount_id'], ['discounts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['stripe_account_id'], ['stripe_account.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_index(op.f('ix_subscription_id'), 'subscription', ['id'], unique=False)
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('invoice_stripe_id', sa.String(), nullable=True),
    sa.Column('service', postgresql.ENUM('stripe', 'coinbase', 'crypto_cloud', name='transactionservice', create_type=False), server_default='stripe', nullable=True),
    sa.Column('created_local_session_id', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=True),
    sa.Column('user_stripe_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('date_updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('status', postgresql.ENUM('success', 'pending', 'failed', name='transactionstatus', create_type=False), nullable=True),
    sa.ForeignKeyConstraint(['user_stripe_id'], ['stripe_account.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('created_local_session_id'),
    sa.UniqueConstraint('invoice_stripe_id'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_transaction_id'), 'transaction', ['id'], unique=False)
    op.create_table('subscription_charge',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('interval', sa.String(), nullable=True),
    sa.Column('interval_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscription.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    op.create_index(op.f('ix_subscription_charge_id'), 'subscription_charge', ['id'], unique=False)
    op.create_table('subscription_item',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('proxy_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('stripe_item_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['proxy_id'], ['proxy.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscription.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('proxy_id'),
    sa.UniqueConstraint('stripe_item_id')
    )
    op.create_index(op.f('ix_subscription_item_id'), 'subscription_item', ['id'], unique=False)
    op.create_table('subscription_payment_data',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('method', postgresql.ENUM('paypal', 'card', 'crypto', 'unknown', name='paymentmethod', create_type=False), nullable=True),
    sa.Column('payment_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscription.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subscription_id')
    )
    op.create_index(op.f('ix_subscription_payment_data_id'), 'subscription_payment_data', ['id'], unique=False)
    op.create_table('transaction_orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('modem_id', sa.Integer(), nullable=True),
    sa.Column('period_str', sa.String(), nullable=True),
    sa.Column('discount_id', sa.Integer(), nullable=True),
    sa.Column('payment_method', sa.String(), nullable=True),
    sa.Column('payment_link', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['discount_id'], ['discounts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modem_id'], ['modem.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_orders_id'), 'transaction_orders', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transaction_orders_id'), table_name='transaction_orders')
    op.drop_table('transaction_orders')
    op.drop_index(op.f('ix_subscription_payment_data_id'), table_name='subscription_payment_data')
    op.drop_table('subscription_payment_data')
    op.drop_index(op.f('ix_subscription_item_id'), table_name='subscription_item')
    op.drop_table('subscription_item')
    op.drop_index(op.f('ix_subscription_charge_id'), table_name='subscription_charge')
    op.drop_table('subscription_charge')
    op.drop_index(op.f('ix_transaction_id'), table_name='transaction')
    op.drop_table('transaction')
    op.drop_index(op.f('ix_subscription_id'), table_name='subscription')
    op.drop_table('subscription')
    op.drop_index(op.f('ix_users_info_id'), table_name='users_info')
    op.drop_table('users_info')
    op.drop_index(op.f('ix_users_crypto_balance_id'), table_name='users_crypto_balance')
    op.drop_table('users_crypto_balance')
    op.drop_index(op.f('ix_stripe_account_id'), table_name='stripe_account')
    op.drop_table('stripe_account')
    op.drop_index(op.f('ix_proxy_id'), table_name='proxy')
    op.drop_table('proxy')
    op.drop_index(op.f('ix_pages_id'), table_name='pages')
    op.drop_table('pages')
    op.drop_index(op.f('ix_notifies_id'), table_name='notifies')
    op.drop_table('notifies')
    op.drop_index(op.f('ix_endpoint_param_id'), table_name='endpoint_param')
    op.drop_table('endpoint_param')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_param_id'), table_name='param')
    op.drop_table('param')
    op.drop_index(op.f('ix_modem_id'), table_name='modem')
    op.drop_table('modem')
    op.drop_index(op.f('ix_endpoint_id'), table_name='endpoint')
    op.drop_table('endpoint')
    op.drop_index(op.f('ix_discounts_id'), table_name='discounts')
    op.drop_table('discounts')
    sa.Enum('customer', 'admin', name='userrole').drop(op.get_bind())
    sa.Enum('fixed', 'percent', name='discounttype').drop(op.get_bind())
    sa.Enum('stripe', 'coinbase', 'crypto_cloud', name='transactionservice').drop(op.get_bind())
    sa.Enum('success', 'pending', 'failed', name='transactionstatus').drop(op.get_bind())
    sa.Enum('paypal', 'card', 'crypto', 'unknown', name='paymentmethod').drop(op.get_bind())
    sa.Enum('public', 'private', name='visibility').drop(op.get_bind())
    sa.Enum('draft', 'published', name='status').drop(op.get_bind())
    sa.Enum('proxy_buy', 'proxy_prolong', 'proxy_delete', 'doc_create', 'doc_update', name='typenotify').drop(op.get_bind())
    # ### end Alembic commands ###
